AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: |
  This CloudFormation template defines the databases backend for the stack.
  - RDS Postgres with Read Replica in another AZ
  - ElastiCache Redis cluster

Parameters:
  AddRDSReadReplica:
    Description: Boolean to add an RDS read replica. Defaults to false
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
  ElasticacheSecurityGroupId:
    Description: Security Group Id for ElastiCache to allow incoming request from EC2s
    Type: String
  RDSSecurityGroupName:
    Description: Security Group Name for RDS to allow incoming request from EC2s
    Type: String
  SSMParamNameRdsPostgresPassword:
    NoEcho: true
    Description: SSM Parameter Name for the RDS password SecureString.
    Type: String

Conditions:
  RDSReadReplica: !And [!Equals [ !Ref AddRDSReadReplica, 'true' ], !Not [!Equals [ !Ref AWS::StackName, demo]]]
  DevEnvironment: !Equals [ !Ref AWS::StackName, demo]
  ProdEnvironment: !Not [!Equals [ !Ref AWS::StackName, demo]]

Resources:
  DevRDSPostgresDB:
    Condition: DevEnvironment
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      BackupRetentionPeriod: 0 # disables automated backups
      DeletionProtection: false
      Engine: postgres
      EngineVersion: '12.7'
      DBInstanceClass: db.t2.micro
      AllocatedStorage: '5'
      DBName: portfoliodb
      MasterUsername: postgres
      MasterUserPassword:
        !Sub
          - "{{resolve:ssm-secure:${paramName}:1}}"
          - { paramName: !Ref SSMParamNameRdsPostgresPassword }
      Port: '5432'
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: gp2
      StorageEncrypted: false
      VPCSecurityGroups: [!Ref RDSSecurityGroupName]
  ProdRDSPostgresDB:
    Condition: ProdEnvironment
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Retain
    Properties:
      BackupRetentionPeriod: 0 # The number of days for which automated backups are retained
      DeletionProtection: false
      Engine: postgres
      EngineVersion: '12.7'
      DBInstanceClass: db.t2.micro
      AllocatedStorage: '5'
      DBName: portfoliodb
      MasterUsername: postgres
      MasterUserPassword:
        !Sub
          - "{{resolve:ssm-secure:${paramName}:1}}"
          - { paramName: !Ref SSMParamNameRdsPostgresPassword }
      Port: '5432'
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: gp2
      StorageEncrypted: false
      VPCSecurityGroups: [!Ref RDSSecurityGroupName]
  ReadReplicaDB:
    Condition: RDSReadReplica
    Type: AWS::RDS::DBInstance
    Properties:
      SourceDBInstanceIdentifier: !Ref ProdRDSPostgresDB
      DBInstanceClass: db.t2.micro
      Tags:
      - Key: Description
        Value: Read Replica Database
  ElasticacheRedisCluster:
    Type: AWS::ElastiCache::CacheCluster
    DeletionPolicy: Delete
    Properties:
      AZMode: single-az
      AutoMinorVersionUpgrade: true
      Engine: redis
      CacheNodeType: cache.t2.micro
      NumCacheNodes: 1
      VpcSecurityGroupIds: [!Ref ElasticacheSecurityGroupId]

Outputs:
  RedisEndpoint:
    Value: !GetAtt ElasticacheRedisCluster.RedisEndpoint.Address
  PostgresEndpoint:
    Value: !If [DevEnvironment, !GetAtt DevRDSPostgresDB.Endpoint.Address, !GetAtt ProdRDSPostgresDB.Endpoint.Address]
