AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: Parent CloudFormation template to deploy a resilient, highly available web application to AWS

Parameters:
  ASGCPUTargetValue:
    Description: Average CPU Target for each instance (eg. 60%)
    Type: Number
    MinValue: 20
    MaxValue: 80
  ASGDesiredCapacity:
    Description: Auto Scaling Group Desired Capacity
    Type: String
  ASGScheduledActionUpTimeHour:
    Default: '7'
    Type: String
    Description: Scale up time, for eg. '8' will cause the ASG to scale up at 8AM GMT.
    AllowedValues: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
                    '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
  ASGScheduledActionDownTimeHour:
    Default: '3'
    Type: String
    Description: Scale down time, for eg. '23' will cause the ASG to scale down at 11PM GMT.
    AllowedValues: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',
                    '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']
  ACMPublicSSLCertArn:
    Description: Public SSL Cert Arn stored in ACM. Must be in the same region as CloudFront (us-east-1).
    Type: String
  CodeDeployDimensionName:
    Description: Dimension Name for the Custom Metric API to push <FAILURE/SUCCESS> codedeploy deployment states to
    Type: String
    Default: DEPLOYMENT_STATE
  CodeDeployMetricName:
    Description: Metric Name for the Custom Metric API to push <FAILURE/SUCCESS> codedeploy deployment states to
    Type: String
    Default: CodeDeployDeploymentStates
  EC2LatestLinuxAmiId:
    Description: AWS managed SSM parameter to retrieve the latest Amazon Linux 2 AMI Id
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
  EC2InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    AllowedValues: [t2.micro]
    ConstraintDescription: Must be a valid EC2 instance type.
  EC2VolumeSize:
    Description: Volume size mounted to EC2
    Type: Number
    MinValue: 8
    MaxValue: 20
  SetR53SubDomainAsStackName:
    Description: SSM parameter to set a R53 sub domain name as the stack name. Allowed values are [True, False]. If False, the root domain name is used.
    Type: AWS::SSM::Parameter::Value<String>
  R53HostedZoneName:
    Description: The DNS name of an existing Amazon Route 53 hosted zone. For example, "mydomain.com"
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    Type: String
    ConstraintDescription: Must be an existing DNS zone name.
  SESIdentityArn:
    Description: SES Identity Arn for email notifications to registered users when new content is added. Used by the Django webapp.
    Type: String
  SSMParamSlackWebhookUrl:
    NoEcho: 'true'
    Description: SSM Parameter Name for the Slack WebHook Url used for ASG/CodeDeploy notifications. Create an empty SSM variable to disable.
    Type: AWS::SSM::Parameter::Value<String>
  SSMParamNameRdsPostgresPassword:
    Description: SSM Parameter Name for the RDS password SecureString.
    Type: String
  SubnetListStr:
    # Type: List<AWS::EC2::Subnet::Id>
    Type: String
    Default: subnet-103a1a79,subnet-28219264
  VpcId:
    Description: VpcId of the existing Virtual Private Cloud (VPC)
    Type: AWS::EC2::VPC::Id

Conditions:
  SetR53SubDomainAsStackNameCondition: !Equals [!Ref SetR53SubDomainAsStackName, 'True']

Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: network/template.yaml
      Parameters:
        ALBSubnetsString: !Ref SubnetListStr
        ACMPublicSSLCertArn: !Ref ACMPublicSSLCertArn
        OAIUserId: !GetAtt StorageStack.Outputs.OAIUserId
        R53HostedZoneName: !Ref R53HostedZoneName
        R53SubDomain: !If [SetR53SubDomainAsStackNameCondition, !Ref AWS::StackName, '']
        S3BucketDomainNameLogging: !GetAtt StorageStack.Outputs.S3BucketDomainNameLogging
        S3BucketNameLogging: !GetAtt StorageStack.Outputs.S3BucketNameLogging
        S3BucketDomainNameWebappStaticFiles: !GetAtt StorageStack.Outputs.S3BucketDomainNameWebappStaticFiles
        S3WebsiteBucketDomainName: !GetAtt StorageStack.Outputs.S3WebsiteBucketDomainName
        VpcId: !Ref VpcId
  ComputeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: compute/template.yaml
      Parameters:
        ASGCPUTargetValue: !Ref ASGCPUTargetValue
        ASGDesiredCapacity: !Ref ASGDesiredCapacity
        ASGScheduledActionUpTimeHour: !Ref ASGScheduledActionUpTimeHour
        ASGScheduledActionDownTimeHour: !Ref ASGScheduledActionDownTimeHour
        ASGSubnetsString: !Ref SubnetListStr
        EC2SecurityGroupId: !GetAtt NetworkStack.Outputs.EC2SecurityGroupId
        EC2InstanceType: !Ref EC2InstanceType
        EC2AmiId: !Ref EC2LatestLinuxAmiId
        EC2VolumeSize: !Ref EC2VolumeSize
        ElasticacheRedisEndpoint: !GetAtt DatabaseStack.Outputs.RedisEndpoint
        RDSPostgresEndpoint: !GetAtt DatabaseStack.Outputs.PostgresEndpoint
        SSMParamNameRdsPostgresPassword: !Ref SSMParamNameRdsPostgresPassword
        S3BucketArnCodeDeployArtifacts: !GetAtt StorageStack.Outputs.S3BucketArnCodeDeployArtifacts
        S3BucketArnStaticFiles: !GetAtt StorageStack.Outputs.S3BucketArnStaticFiles
        S3BucketNameStaticFiles: !GetAtt StorageStack.Outputs.S3BucketNameWebappStaticFiles
        SNSTopicArn: !GetAtt ServerlessStack.Outputs.SNSTopicArn
        SESIdentityArn: !Ref SESIdentityArn
        SQSQueueArn: !GetAtt ServerlessStack.Outputs.SQSQueueArn
        SQSQueueUrl: !GetAtt ServerlessStack.Outputs.SQSQueueUrl
        TargetGroupArn: !GetAtt NetworkStack.Outputs.TargetGroupArn
        TargetGroupName: !GetAtt NetworkStack.Outputs.TargetGroupName
        WebsiteDomain: !GetAtt NetworkStack.Outputs.Route53RecordSetDomainName
  StorageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: storage/template.yaml
      Parameters:
        ASGScheduledActionUpTimeHour: !Ref ASGScheduledActionUpTimeHour
        ASGScheduledActionDownTimeHour: !Ref ASGScheduledActionDownTimeHour
        R53HostedZoneName: !Ref R53HostedZoneName
        R53SubDomain: !If [SetR53SubDomainAsStackNameCondition, !Ref AWS::StackName, '']
  ServerlessStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: serverless/template.yaml
      Parameters:
        CodeDeployDimensionName: !Ref CodeDeployDimensionName
        CodeDeployMetricName: !Ref CodeDeployMetricName
        SlackWebhookUrl: !Ref SSMParamSlackWebhookUrl
  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: database/template.yaml
      Parameters:
        AddRDSReadReplica: 'false'
        ElasticacheSecurityGroupId: !GetAtt NetworkStack.Outputs.ElastiCacheSecurityGroupId
        RDSSecurityGroupName: !GetAtt NetworkStack.Outputs.RDSSecurityGroupName
        SSMParamNameRdsPostgresPassword: !Ref SSMParamNameRdsPostgresPassword
  DashboardStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: dashboard/template.yaml
      Parameters:
        ALBFullName: !GetAtt NetworkStack.Outputs.ALBFullName
        AutoScalingGroupName: !GetAtt ComputeStack.Outputs.AutoScalingGroupName
        CloudFrontDistributionId: !GetAtt NetworkStack.Outputs.CloudFrontDistributionId
        CodeDeployDimensionName: !Ref CodeDeployDimensionName
        CodeDeployMetricName: !Ref CodeDeployMetricName
        DockerLogGroupName: !Join ['', ["'", !GetAtt ComputeStack.Outputs.DockerLogGroupName, "'"]]
        LogsOnly: 'true'
        TargetGroupFullName: !GetAtt NetworkStack.Outputs.TargetGroupFullName
        WebsiteUrl: !Join ['', [https://, !GetAtt NetworkStack.Outputs.Route53RecordSetDomainName]]

Outputs:
  DashboardUrl:
    Value: !Join ['', [
      'https://',
      !Sub '${AWS::Region}',
      '.console.aws.amazon.com/cloudwatch/home?region=',
      !Sub '${AWS::Region}',
      '#dashboards:name=',
      !GetAtt 'DashboardStack.Outputs.DashboardName'
    ]]
  CodeDeployApplicationName:
    Value: !GetAtt ComputeStack.Outputs.CodeDeployApplicationName
  CodeDeployDeploymentGroupName:
    Value: !GetAtt ComputeStack.Outputs.CodeDeployDeploymentGroupName
  CodeDeployS3BucketName:
    Value: !GetAtt StorageStack.Outputs.S3BucketNameCodeDeployArtifacts
  PostgresRdsEndpoint:
    Value: !GetAtt DatabaseStack.Outputs.PostgresEndpoint
  RedisElasticacheEndpoint:
    Value: !GetAtt DatabaseStack.Outputs.RedisEndpoint
